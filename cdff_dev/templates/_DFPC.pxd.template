from libcpp cimport bool
from libcpp.string cimport string
{% if import_cdfftypes %}
cimport _cdff_types
{% endif %}


cdef extern from "{{ desc["name"] }}Interface.hpp" namespace "CDFF::DFPC":
    cdef cppclass {{ desc["name"] }}Interface:
        {{ desc["name"] }}Interface()
        void run() except +
        void setConfigurationFile(string) except +
        void setup() except +

        {% for input_port in desc["input_ports"] %}
        void {{ input_port["name"] }}Input({{ type_registry.get_info(input_port["type"]).cython_type() }} data) except +
        {% endfor %}

        {% for output_port in desc["output_ports"] %}
        {{ type_registry.get_info(output_port["type"]).cython_type() }} {{ output_port["name"] }}Output() except +
        {% endfor %}

        {% for operation in desc["operations"] %}
        {{ type_registry.get_info(operation["output_type"]).cython_type() }} {{ operation["name"] }}({% for arg in operation["inputs"] %}{{ arg["type"] }} {{ arg["name"] }}{{ ", " if not loop.last }}{% endfor %}) except +
        {% endfor %}
{% for class_name in desc["implementations"] %}


cdef extern from "{{ class_name }}.hpp" namespace "CDFF::DFPC::{{ desc["name"] }}":
    cdef cppclass {{ class_name }}({{ desc["name"] }}Interface):
        pass
{% endfor %}
