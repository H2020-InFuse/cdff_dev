# distutils: language=c++
cimport _{{ desc["name"].lower() }}
cimport {{ desc["name"].lower() }}
from cython.operator cimport dereference as deref
from libcpp cimport bool
from libcpp.string cimport string
{% if import_cdfftypes %}
cimport cdff_types
cimport _cdff_types
{% endif %}
{% for class_name in implementations %}


cdef class {{ class_name }}:
    def __cinit__(self):
        self.thisptr = NULL
        self.delete_thisptr = False

    def __dealloc__(self):
        if self.delete_thisptr and self.thisptr != NULL:
            del self.thisptr

    def __init__(self):
        self.thisptr = new _{{ desc["name"].lower() }}.{{ class_name }}()
        self.delete_thisptr = True

    def run(self):
        self.thisptr.run()

    def set_configuration_file(self, str configuration_file_path):
        cdef string path = configuration_file_path.encode()
        self.thisptr.setConfigurationFile(path)

    def setup(self):
        self.thisptr.setup()

{{ input_ports -}}
{{ output_ports -}}
{{ operations -}}
{% endfor %}
